[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "utils-bot-v2"
version = "2.0.0"
description = "A modern, feature-rich Discord utility bot"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Utils Bot Contributors"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11"
dependencies = [
    "discord.py>=2.4.0",
    "aiohttp>=3.9.0",
    "httpx>=0.27.0",
    "sqlalchemy>=2.0.0",
    "aiosqlite>=0.20.0",
    "alembic>=1.13.0",
    "google-generativeai>=0.8.0",
    "pyotp>=2.9.0",
    "cryptography>=42.0.0",
    "Pillow>=10.4.0",
    "pydantic>=2.8.0",
    "python-decouple>=3.8",
    "structlog>=24.1.0",
    "sentry-sdk>=2.8.0",
    "python-dateutil>=2.9.0",
    "pytz>=2024.1",
]

[project.optional-dependencies]
redis = ["redis>=5.0.0"]
postgres = ["asyncpg>=0.29.0"]

[project.scripts]
utils-bot = "main:main"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["config", "core", "models", "utils", "cogs"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "network: Tests that require network access",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = [".", "cogs", "core", "models", "utils", "config"]
omit = [
    "tests/*",
    "migrations/*",
    "dev_config.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
